###############################################################
# makefile.conf
#
# There should be no need for most people, other than code
# maintainers, to change anything in this file.  To build
# RTcmix, use the configure script instead:
#
#   $ ./configure [--with-alsa] [--with-perl] [--with-python]
#
# See INSTALL for details.  After using configure, you can 
# override what it does by editing site.conf, if you want.
###############################################################

# The name of the RTcmix directory
CMIXDIR = @CMIXDIR@

# This file is generated by the configure script.
include $(CMIXDIR)/defs.conf

# The dir that will contain the instrument dynamic shared objects
LIBDESTDIR = $(CMIXDIR)/shlib

# This file contains site-specific settings.  Anything that's
# uncommented in this file will override the same definition
# made inside defs.conf by the configure script. The same goes
# for any other symbol defined above (such as LIBDESTDIR).
include $(CMIXDIR)/site.conf

ifndef ARCH
	$(error ARCH must be defined by configure)
endif

ifndef BUILDTYPE
	$(error BUILDTYPE must be defined)
endif

# The path to this file
MAKEFILE_CONF = $(CMIXDIR)/makefile.conf

LIBDIR = $(CMIXDIR)/lib
DESTDIR = $(CMIXDIR)/bin
BINDIR = $(DESTDIR)
INCLUDEDIR = $(CMIXDIR)/include
MINCLUDEDIR = $(CMIXDIR)/minclude

SRCDIR = $(CMIXDIR)/src
AUDIODIR = $(SRCDIR)/audio
CONFDIR = $(SRCDIR)/conf
PARSERDIR = $(SRCDIR)/parser
MINCDIR = $(PARSERDIR)/minc
PERLDIR = $(PARSERDIR)/perl

# For temporary use in linking MIX instrument in
MIXDIR = insts/base/MIX

MINCLIB = $(MINCDIR)/libminc.a
SNDLIB = $(SRCDIR)/sndlib/sndlib.a
AUDIOLIB = $(AUDIODIR)/librtaudio.a

LIBPREFIX = lib

# Compile and link time flags

# -- Linux ----------------------------------------------------
ifeq ($(ARCH),LINUX)
  ARCHFLAGS = -DLINUX $(ARCH_BITFLAGS)
  ARCH_RTLDFLAGS = -Wl,-rpath $(LIBDIR)
  # This is overridable in site.conf
  ifndef RTLIBTYPE
  	RTLIBTYPE = DYNAMIC
  endif
  ifeq ($(BUILDTYPE), STANDALONE)
    ARCHFLAGS += -DSTANDALONE
    SHLIB = rtcmix
	INSTTYPE = DYNAMIC
    ifndef AUDIODRIVER
		 AUDIODRIVER=OSS
    endif
  endif
  ifeq ($(BUILDTYPE), LINUXEMBEDDED)
    ARCHFLAGS += -DEMBEDDED
    AUDIODRIVER=EMBEDDEDAUDIO
    CMIX_FLAGS += -DEMBEDDEDAUDIO
    INSTTYPE = STATIC
    SHLIB = rtcmix_embedded
    RTLIB_INSTALL_DIR = $(LIBDIR)
    ifeq ($(RTLIBTYPE), DYNAMIC)
        SHLIB_SUFFIX = so
        RTLIB_LDFLAGS = $(DYNAMIC_LDFLAGS)
    else
        ARCH_RTLDFLAGS =
        SHLIB_SUFFIX = a
        RTLIB_LDFLAGS =
    endif
  endif
  CC = gcc
  CXX = g++ -Wno-deprecated
  LD = ld
  MAKE = make
  INSTALL = cp -f
  RANLIB = touch
  SHELL = /bin/sh
endif

# -- Mac OS X -------------------------------------------------
ifeq ($(ARCH),MACOSX)
  # DAS: create better macro
  ARCHFLAGS = -fno-common -DMACOSX   
  ARCH_RTLDFLAGS = -dylib_file /usr/lib/$(RTLIB):$(LIBRTCMIX)
  CC = cc
  CXX = c++ -Wno-deprecated
  LD = ld
  MAKE = make
  INSTALL = ditto
  RANLIB = ranlib
  SHELL = /bin/sh
  # Optional but rare override for the maximum number of supported audio
  # channels.  Must be >= 8
  ifdef MAXCHANS
    ARCHFLAGS += -DMAXCHANS=$(MAXCHANS)
  endif

  # -- standalone (OSX) ----------------------------------------
  ifeq ($(BUILDTYPE), STANDALONE)
    ARCHFLAGS += $(ARCH_BITFLAGS) -DSTANDALONE
    ARCH_SYS_LDFLAGS = -framework CoreFoundation
    ifeq ($(USE_OSX_DISPATCH), TRUE)
      ARCHFLAGS += -DUSE_OSX_DISPATCH
    endif
    ARCH_RTLDFLAGS += -framework AudioUnit
	INSTTYPE = DYNAMIC
	SHLIB = rtcmix
    SHLIB_SUFFIX = dylib
    AUDIODRIVER=APPLE
    CMIX_FLAGS += -DAPPLEAUDIO
  endif

  # -- OSX embedded ----------------------------------------
  ifeq ($(BUILDTYPE), OSXEMBEDDED)
    ARCHFLAGS += $(ARCH_BITFLAGS) -DEMBEDDED
    ARCH_SYS_LDFLAGS = -framework CoreFoundation -framework AudioToolbox -framework CoreMIDI
    ifeq ($(USE_OSX_DISPATCH), TRUE)
      ARCHFLAGS += -DUSE_OSX_DISPATCH
    endif
    ifeq ($(MULTI_THREAD_SUPPORT), TRUE)
      CMIX_FLAGS += -DMULTI_THREAD
    endif
    ARCH_RTLDFLAGS += -framework AudioUnit
    AUDIODRIVER=EMBEDDEDAUDIO
    CMIX_FLAGS += -DEMBEDDEDAUDIO
	INSTTYPE = STATIC
    SHLIB = rtcmix_embedded
    # This is overridable in site.conf
	ifndef RTLIBTYPE
		RTLIBTYPE = DYNAMIC
	endif
	ifeq ($(RTLIBTYPE), DYNAMIC) 
        SHLIB_SUFFIX = dylib
		RTLIB_LDFLAGS = $(DYNAMIC_LDFLAGS)
	else
		ARCH_RTLDFLAGS =
        SHLIB_SUFFIX = a
		RTLIB_LDFLAGS =
	endif
	RTLIB_INSTALL_DIR = $(LIBDIR)
  endif

  # -- MaxMSP -------------------------------------------------
  ifeq ($(BUILDTYPE), MAXMSP)
    ARCHFLAGS += $(ARCH_BITFLAGS) -DEMBEDDED -DMAXMSP $(MAX_INCLUDES)
    ifeq ($(USE_OSX_DISPATCH), TRUE)
      ARCHFLAGS += -DUSE_OSX_DISPATCH
    endif
    # Optional but rare override for the maximum number of supported audio
    # channels.  Must be >= 8
    ifdef MAXCHANS
      ARCHFLAGS += -DMAXCHANS=$(MAXCHANS)
    endif
    ARCHFLAGS += -isysroot `xcrun --show-sdk-path`
    CC = cc
    CXX = c++ -Wno-deprecated
	INSTTYPE = STATIC

    SHLIB = rtcmixdylib
	SHLIB_SUFFIX = so
	# we override this to override the "lib" prefix
	ifeq ($(filter $(MAX_MAJOR_VERSION), 8 9),$(MAX_MAJOR_VERSION))
        LIBPREFIX = BASE_
    else
        LIBPREFIX =
    endif
	RTLIB_LDFLAGS = $(UB_CFLAGS) -Wl,-U,_cpost,-bundle,-undefined dynamic_lookup
	RTLIBTYPE = DYNAMIC
	RTLIB_INSTALL_DIR = $(MAX_LIB_INSTALL_DIR)
    AUDIODRIVER=EMBEDDEDAUDIO
    CMIX_FLAGS += -DEMBEDDEDAUDIO
  endif

  # -- iOS ----------------------------------------------------
  ifeq ($(BUILDTYPE), IOS)
	# This is always true for IOS
	RTLIBTYPE = STATIC
	SHLIB_SUFFIX = a
	INSTTYPE = STATIC
	# This is overridable in site.conf
	ifndef AUDIODRIVER
    	AUDIODRIVER=APPLE
    endif
	ifeq ($(AUDIODRIVER), EMBEDDEDAUDIO)
		CMIX_FLAGS += -DEMBEDDEDAUDIO
	else
		CMIX_FLAGS += -DAPPLEAUDIO
	endif
    ifeq ($(IPHONE_TYPE), SIMULATOR)
      ARCH_BITFLAGS = -m64
      ARCHFLAGS += $(ARCH_BITFLAGS) -DEMBEDDED -DIOS -DSIMULATOR -arch i386 -arch x86_64
      ARCH_RTLDFLAGS = -dylib_file /usr/lib/$(RTLIB):$(LIBRTCMIX) -arch i386 -arch x86_64 -framework AudioToolbox
      ifeq ($(USE_OSX_DISPATCH), TRUE)
        ARCHFLAGS += -DUSE_OSX_DISPATCH
      endif
      IPHONE_CFLAGS = -isysroot `xcrun -sdk iphonesimulator --show-sdk-path`
      CC = `xcrun -sdk iphonesimulator -f cc`
      CXX = `xcrun -sdk iphonesimulator -f c++` -Wno-deprecated
	  SHLIB = rtcmix_iphone-SIM
    endif
    ifeq ($(IPHONE_TYPE), DEVICE)
      ARCHFLAGS += $(ARCH_BITFLAGS) -DEMBEDDED -DIOS -DIOSDEV
      ARCH_RTLDFLAGS =
      ifeq ($(USE_OSX_DISPATCH), TRUE)
        ARCHFLAGS += -DUSE_OSX_DISPATCH
      endif
      IPHONE_CFLAGS = -isysroot `xcrun -sdk iphoneos --show-sdk-path`
      CC = `xcrun -sdk iphoneos -f cc` -arch armv7s -arch armv7 -arch arm64
      CXX = `xcrun -sdk iphoneos -f c++` -arch armv7s -arch armv7 -arch arm64
	  SHLIB = rtcmix_iphone-DEV
    endif
  endif
endif

# -- SGI ------------------------------------------------------
ifeq ($(ARCH),SGI)
  ARCHFLAGS = -DSGI $(ARCH_BITFLAGS) -DSTANDALONE
  ARCH_RTLDFLAGS =
  CC = cc -Xcpluscomm
  CXX = CC
  LD = ld
  MAKE = gmake
  INSTALL = cp -f
  INSTTYPE = DYNAMIC
  RANLIB = touch
  SHELL = /bin/sh
  SHLIB = rtcmix
  SHLIB_SUFFIX = so
  RTLIBTYPE = DYNAMIC
  RTLIB_INSTALL_DIR = $(LIBDIR)
endif

# -- FreeBSD --------------------------------------------------
ifeq ($(ARCH),FREEBSD)
  ARCHFLAGS = -DFREEBSD -DLINUX $(ARCH_BITFLAGS) -DSTANDALONE
  ARCH_RTLDFLAGS =
  CC = gcc
  CXX = g++
  LD = ld
  MAKE = gmake
  INSTALL = cp -f
  INSTTYPE = DYNAMIC
  RANLIB = touch
  SHELL = /bin/sh
  SHLIB = rtcmix
  SHLIB_SUFFIX = so
  RTLIBTYPE = DYNAMIC
  RTLIB_INSTALL_DIR = $(LIBDIR)
endif

# -- msys2 ----------------------------------------------------
ifeq ($(ARCH),MSYS2)
  ARCHFLAGS = -DMSYS2 $(ARCH_BITFLAGS)
  ARCH_RTLDFLAGS = -Wl,-rpath $(LIBDIR)
  RTLIBTYPE = DYNAMIC
  ifeq ($(BUILDTYPE), STANDALONE)
    ARCHFLAGS += -DSTANDALONE
    SHLIB = rtcmix
	INSTTYPE = DYNAMIC
    ifndef AUDIODRIVER
		 AUDIODRIVER=OSS
    endif
    SHLIB_SUFFIX = dll
    RTLIB_LDFLAGS = $(DYNAMIC_LDFLAGS)
  endif
  ifeq ($(BUILDTYPE), LINUXEMBEDDED)
	ARCHFLAGS += -DEMBEDDED
	AUDIODRIVER=EMBEDDEDAUDIO
	CMIX_FLAGS += -DEMBEDDEDAUDIO
	INSTTYPE = STATIC
	SHLIB = rtcmix_embedded
	# This is overridable in site.conf
	ifndef RTLIBTYPE
		RTLIBTYPE = DYNAMIC
	endif
	RTLIB_INSTALL_DIR = $(LIBDIR)
  endif
  CC = gcc
  CXX = g++ -Wno-deprecated
  LD = ld
  MAKE = make
  INSTALL = cp -f
  RANLIB = touch
  SHELL = /bin/sh
endif

# -- Pd -----------------------------------------------------
ifeq ($(BUILDTYPE), PD)
	ARCHFLAGS += -DEMBEDDED -DPD -I$(PD_INCLUDES)
	ifeq ($(ARCH),MACOSX)
		SHARED_LDFLAGS += -Wl,-U,_post
		ARCHFLAGS += -arch i386 -arch x86_64
	endif
	ifndef RTLIBTYPE
		RTLIBTYPE = DYNAMIC
	endif

	ifeq ($(RTLIBTYPE), DYNAMIC)
		SHLIB = rtcmixdylib
		SHLIB_SUFFIX = so
		RTLIB_LDFLAGS = $(SHARED_LDFLAGS)
	else
		SHLIB = rtcmixlib
		SHLIB_SUFFIX = a
		RTLIB_LDFLAGS =
	endif
	AUDIODRIVER=EMBEDDEDAUDIO
	CMIX_FLAGS += -DEMBEDDEDAUDIO
	INSTTYPE = STATIC
endif

ifeq ($(BUILDTYPE), STANDALONE)
	RTLIB_LDFLAGS = $(DYNAMIC_LDFLAGS)
	RTLIBTYPE = DYNAMIC
	RTLIB_INSTALL_DIR = $(LIBDIR)
	
	ifeq ($(NPLAY_SUPPORT), TRUE)
	  CMIX_FLAGS += -DNETAUDIO
	endif
	ifeq ($(JACK_SUPPORT), TRUE)
	  CMIX_FLAGS += -DJACK
	endif
	ifeq ($(FFTW_SUPPORT), TRUE)
	  CMIX_FLAGS += -DFFTW
	endif
	ifeq ($(MULTI_THREAD_SUPPORT), TRUE)
	  CMIX_FLAGS += -DMULTI_THREAD
	endif
endif

INCLUDES = -I. -I$(CMIXDIR)/include $(EXTRA_INCLUDES)

CFLAGS = $(IPHONE_CFLAGS) $(INCLUDES) $(OPT) $(PICFLAGS) $(ARCHFLAGS) $(CMIX_FLAGS)
CXXFLAGS = $(IPHONE_CFLAGS) $(INCLUDES) $(OPT) $(PICFLAGS) $(ARCHFLAGS) $(CMIX_FLAGS)

# Platform-independent library flags

RTLIB = $(LIBPREFIX)$(SHLIB).$(SHLIB_SUFFIX)
LIBRTCMIX = $(LIBDIR)/$(RTLIB)
RTLDFLAGS = -L$(LIBDIR) -l$(SHLIB) -lgen

# All platforms can use global score include directory

CMIX_FLAGS += -DMINCLUDEDIR=\"$(MINCLUDEDIR)\"

# Multi-platform MIDI support via portmidi.  If not set, older internal lib
# compiled and used.

ifeq ($(USE_EXTERNAL_PMLIB), TRUE)
	CMIX_FLAGS += $(PMLIB_CFLAGS)
	RTLDFLAGS += $(PMLIB_LDFLAGS)
endif

# Multi-platform OSC server support

ifeq ($(OSC_SUPPORT), TRUE)
	CMIX_FLAGS += -DOSC $(LIBLO_CFLAGS)
	RTLDFLAGS += $(LIBLO_LIBS)
endif

# Platform-specific library flags Key:
#
# SYS_LDFLAGS:		  External libraries for each platform.
# SYSLIBS:			  Libraries which DSOs link against.
# SHARED_LDFLAGS:		Linker flags when creating DSOs.
# CMIXOBJS:			 Non-lib .o files which standalone binaries need.
# LDFLAGS:			  Libraries which standalone binaries link against.
# IMBCMIXOBJS:		  Non-lib .o files which imbedded binaries need.
# DYNAMIC_LDFLAGS:	  Linker flags when creating dynamic shared libraries.
# PYTHON_LDFLAGS: 	 Special linker flags for PYCMIX

ifeq ($(ARCH),LINUX)
  ifeq ($(AUDIODRIVER),ALSA)
	SYS_LDFLAGS = -lasound -lpthread -lm -ldl
  else
	SYS_LDFLAGS = -lpthread -lm -ldl
  endif
  DSO_LDFLAGS = $(OPT) $(SYSLIBS)
  SHARED_LDFLAGS = -shared -Wl,-soname,$(RTLIB)
  DYNAMIC_LDFLAGS = $(SHARED_LDFLAGS)
  DYN = -rdynamic
  PYTHON_LDFLAGS =
endif
ifeq ($(ARCH),MACOSX)
  SYS_LDFLAGS = -framework CoreAudio $(ARCH_SYS_LDFLAGS)
  DSO_LDFLAGS = $(SYS_LDFLAGS)
  ifeq ($(BUILDTYPE), PD)
  	SHARED_LDFLAGS = $(ARCHFLAGS) -bundle
  else
		SHARED_LDFLAGS = $(ARCHFLAGS) $(OPT) -bundle -flat_namespace -undefined suppress #-undefined dynamic_lookup
  endif
  DYNAMIC_LDFLAGS = $(ARCHFLAGS) -undefined dynamic_lookup -dynamiclib -install_name $(LIBDIR)/$(RTLIB)
  DYN = 
  PYTHON_LDFLAGS = -headerpad_max_install_names
endif
ifeq ($(ARCH),SGI)
  SYS_LDFLAGS = -lpthread -laudio -lm
  DSO_LDFLAGS = $(SYS_LDFLAGS)
  SHARED_LDFLAGS = -shared -update_registry $(LIBDESTDIR)/so_locations
  DYNAMIC_LDFLAGS = $(SHARED_LDFLAGS)
  DYN = 
  PYTHON_LDFLAGS =
endif
ifeq ($(ARCH),FREEBSD)
  SYS_LDFLAGS += -pthread -lm -ll
  DSO_LDFLAGS = -export-dynamic $(SYS_LDFLAGS)
  SHARED_LDFLAGS = -shared -Wl,-soname,$(RTLIB)
  DYNAMIC_LDFLAGS = $(SHARED_LDFLAGS)
  DYN = -rdynamic
  PYTHON_LDFLAGS =
endif

LDFLAGS = $(ARCH_RTLDFLAGS) $(RTLDFLAGS)
SYSLIBS = $(ARCH_RTLDFLAGS) -L$(LIBDIR) -lgen $(SYS_LDFLAGS)

# For benefit of inst makefiles that live outside CMIXDIR hierarchy
UGENS_H = $(CMIXDIR)/include/ugens.h

# for rt insts
INSTRUMENT_H = $(CMIXDIR)/include/Instrument.h
PROFILE_O = $(CMIXDIR)/src/rtcmix/profile.o

# for disk-based insts
RTPROFILE_O = $(CMIXDIR)/src/rtcmix/rtprofile.o

CMIX_O = $(LIBDIR)/main.o $(LIBDIR)/RTcmixMain.o
M_O =  $(PARSERDIR)/parse_with_minc.o
IMB_RTCMIX_O =
P_O =  $(PARSERDIR)/parse_with_perl.o
PY_O = $(PARSERDIR)/parse_with_python.o

CMIXOBJS = $(CMIX_O) $(M_O) $(GENLIB)
IMBCMIXOBJS = $(IMB_RTCMIX_O) $(GENLIB)

# Things to be removed by 'clean'
TRASH = core core.[0-9]+ *~

# Cool debugging feature:  to see value of make macro "$(MACRO)" type "make print-MACRO"
print-%: ; @echo $* is $($*)

# Sanity check for each included instance of makefile.conf
ifneq (,$(filter ,$(LIBPREFIX) $(SHLIB) $(SHLIB_SUFFIX) $(RTLIB) $(RTLIBTYPE) $(AUDIODRIVER)))
	$(info LIBPREFIX: $(LIBPREFIX))
	$(info SHLIB: $(SHLIB))
	$(info SHLIB_SUFFIX: $(SHLIB_SUFFIX))
	$(info RTLIB: $(RTLIB))
	$(info RTLIBTYPE: $(RTLIBTYPE))
	$(info AUDIODRIVER: $(AUDIODRIVER))
	$(error Configuration error - some important Makefile variable is not set)
endif

