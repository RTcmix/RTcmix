#!/bin/sh
# Splice together one segment each of two sound files and play them.
# If last out time not given, play until end of second file.
# Files must have 1, 2, 4, or 8 channels and must have same sampling rate.
# JGG, 7/31/03

if [ $# -lt 5 ]
then
	echo	Usage: `basename $0` file1 in1 out1 file2 in2 \[out2\]
	echo "		 (splice two sound file segments, defined by in,out times)"
	exit 1
fi

flags='-v 1'

sf1=$1
in1=$2
out1=$3
sf2=$4
in2=$5
out2=-1
if [ $# -eq 6 ]
then
	out2=$6
fi

script='
ramplen = 0.002;
chans1 = filechans($sf1);
sr1 = filesr($sf1);
chans2 = filechans($sf2);
sr2 = filesr($sf2);
if (sr1 != sr2) {
	printf("File sampling rates must be the same.\n");
	exit(1);
}
rtsetparams(sr1, max(chans1, chans2));
load("STEREO");
control_rate(20000);
amp = 1;

if ($out1 <= $in1) {
	printf("out time (%f) must be greater than in time (%f).\n", $out1, $in1);
	exit(1);
}
rtinput($sf1);
dur1 = $out1 - $in1;
env = maketable("line", 20000, 0,0, ramplen,1, dur1-ramplen,1, dur1,0);
if (chans1 == 1) {
	STEREO(0, $in1, dur1, mul(amp, env), 0.5)
}
else if (chans1 == 2) {
	STEREO(0, $in1, dur1, mul(amp, env), 1, 0)
}
else if (chans1 == 4) {
	MIX(0, $in1, dur1, mul(amp, env), 0, 1, 2, 3)
}
else if (chans1 == 8) {
	MIX(0, $in1, dur1, mul(amp, env), 0, 1, 2, 3, 4, 5, 6, 7)
}
else {
	printf("Chans must be 1, 2, 4, or 8.\n");
	exit(1);
}

rtinput($sf2);
if ($out2 == -1) {
	dur2 = DUR() - $in2
}
else {
	dur2 = $out2 - $in2
}
env = maketable("line", 20000, 0,0, ramplen,1, dur2-ramplen,1, dur2,0);
if (chans2 == 1) {
	STEREO(dur1, $in2, dur2, mul(amp, env), 0.5)
}
else if (chans2 == 2) {
	STEREO(dur1, $in2, dur2, mul(amp, env), 1, 0)
}
else if (chans2 == 4) {
	MIX(dur1, $in2, dur2, mul(amp, env), 0, 1, 2, 3)
}
else if (chans2 == 8) {
	MIX(dur1, $in2, dur2, mul(amp, env), 0, 1, 2, 3, 4, 5, 6, 7)
}
else {
	printf("Chans must be 1, 2, 4, or 8.\n");
	exit(1);
}
'
echo $script | CMIX $flags --sf1=$sf1 --in1=$in1 --out1=$out1 --sf2=$sf2 --in2=$in2 --out2=$out2

