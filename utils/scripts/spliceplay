#!/bin/sh
# Splice together multiple segments of a sound file and play them.
# If last out time not given, play until end of file.
# Only works for mono and stereo files.
# JGG, 7/31/03

if [ $# -lt 4 ]
then
   echo  Usage: `basename $0` file in1 out1 in2 \[out2 in3 \[out3 etc...\]
   echo "       splice multiple segments -- defined by in,out times -- of one sound file"
   exit 1
fi

flags='-v 1'

sf=$1
shift

script='
ramplen = 0.002;
i = 0;
args = {};
for (arg = 0; arg < n_arg(); arg += 2) {
   in = f_arg(arg);
   if (arg < n_arg() - 1) {
      out = f_arg(arg + 1);
      if (out <= in) {
         printf("out time (%f) must be greater than in time (%f).\n", out, in);
         exit(1);
      }
   }
   else {
      out = -1;
   }
	args[i] = in;
	args[i + 1] = out;
   i += 2;
}
numsegs = len(args) / 2;
sr = filesr($sf);
chans = filechans($sf);
rtsetparams(sr, 2);
load("STEREO");
rtinput($sf);
sfdur = DUR();
amp = 1;
control_rate(20000);
outskip = 0;
i = 0;
for (seg = 0; seg < numsegs; seg += 1) {
   inskip = args[i];
   endin = args[i + 1];
   if (endin == -1) {
      dur = sfdur - inskip;
   }
   else {
      dur = endin - inskip;
   }
   env = maketable("line", 20000, 0,0, ramplen,1, dur-ramplen,1, dur,0);
   if (chans == 1) {
      STEREO(outskip, inskip, dur, mul(amp, env), 0.5)
   }
   else {
      STEREO(outskip, inskip, dur, mul(amp, env), 1, 0)
   }
   outskip += dur;
   i += 2;
}
'
echo $script | CMIX $flags --sf=$sf $*

