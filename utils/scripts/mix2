#!/bin/sh
# Play 2 sound files at the same time, with amp scaling.
# Files must have 1, 2, 4, or 8 channels and must have same sampling rate.
# JGG, 9/9/03

if [ $# -ne 4 ] && [ $# -ne 6 ]
then
	echo	"Usage: `basename $0` file1 amp1 file2 amp2"
	echo	"	OR"
	echo	"       `basename $0` file1 inskip1 amp1 file2 inskip2 amp2"
	echo	"(plays 2 files at the same time)"
	exit 1
fi

flags='-v 1'

if [ $# -eq 4 ]
then
	sf1=$1
	insk1=0
	amp1=$2
	sf2=$3
	insk2=0
	amp2=$4
elif [ $# -eq 6 ]
then
	sf1=$1
	insk1=$2
	amp1=$3
	sf2=$4
	insk2=$5
	amp2=$6
fi

script='
chans1 = filechans($sf1);
sr1 = filesr($sf1);
chans2 = filechans($sf2);
sr2 = filesr($sf2);
if (sr1 != sr2) {
	printf("File sampling rates must be the same.\n");
	exit(1);
}
if (chans1 > 8 || chans2 > 8) {
	printf("Input files can have no more than 8 channels.\n");
	exit(1);
}
rtsetparams(sr1, max(chans1, chans2));
rtinput($sf1);
dur = DUR() - $insk1;
MIX(0, $insk1, dur, $amp1, 0, 1, 2, 3, 4, 5, 6, 7);
rtinput($sf2);
dur = DUR() - $insk2;
MIX(0, $insk1, dur, $amp2, 0, 1, 2, 3, 4, 5, 6, 7);
'
echo $script | CMIX $flags --sf1=$sf1 --insk1=$insk1 --amp1=$amp1 --sf2=$sf2 --insk2=$insk2 --amp2=$amp2

