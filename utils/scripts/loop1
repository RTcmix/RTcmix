#!/bin/sh
# Play a sound file, looping between two points, with amp scaling.
# JGG, 2/5/06

if [ $# -lt 2 ] || [ $# -gt 5 ]
then
	echo	"Usage: `basename $0` file totdur [inpoint [outpoint [amp]]]"
	echo	"(loops file for totdur seconds, file segment optionally defined by"
	echo	"in and out points, with optional amp scaling)"
	exit 1
fi

flags='-v 1'

inpt=0
outpt=0
amp=1
if [ $# -gt 2 ]
then
	inpt=$3
fi
if [ $# -gt 3 ]
then
	outpt=$4
fi
if [ $# -gt 4 ]
then
	amp=$5
fi

script='
totdur = $dur;
fdur = filedur($sf);
inskip = $inpt;
if ($outpt == 0) {
	inend = fdur;
}
else {
	inend = $outpt;
	if (inend > fdur) {
		printf("<outpoint> must be within file duration. Correcting to %f.\n", fdur);
		inend = fdur;
	}
}
if (inskip >= inend) {
	printf("<inpoint> must be earlier than <outpoint>.\n");
	exit(1);
}
printf("Looping %s, dur: %f, seg: [%f,%f], amp: %f\n", $sf, totdur, inskip, inend, $amp);
sr = filesr($sf);
chans = filechans($sf);
rtsetparams(sr, chans);
rtinput($sf);
segdur = inend - inskip;
control_rate(10000);
ramp = 0.01;
env = maketable("curve", 10000, 0,0,1, ramp,1,0, segdur-ramp,1,-1, segdur,0);
for (st = 0; st < totdur; st += segdur) {
	if (totdur - st < segdur) {
		segdur = totdur - st;
	}
	if (chans == 1) {
		MIX(st, inskip, segdur, mul($amp, env), 0);
	}
	if (chans == 2) {
		MIX(st, inskip, segdur, mul($amp, env), 0, 1);
	}
	if (chans == 4) {
		MIX(st, inskip, segdur, mul($amp, env), 0, 1, 2, 3);
	}
	if (chans == 6) {
		MIX(st, inskip, segdur, mul($amp, env), 0, 1, 2, 3, 4, 5);
	}
	if (chans == 8) {
		MIX(st, inskip, segdur, mul($amp, env), 0, 1, 2, 3, 4, 5, 6, 7);
	}
}
'
echo $script | CMIX $flags --sf=$1 --dur=$2 --inpt=$inpt --outpt=$outpt --amp=$amp

